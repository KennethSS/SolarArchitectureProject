// Generated by Dagger (https://dagger.dev).
package com.solar.architecture;

import com.solar.architecture.mvvm.viewmodel.BasicViewModel;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<BasicViewModel> viewModelProvider;

  public MainActivity_MembersInjector(Provider<BasicViewModel> viewModelProvider) {
    this.viewModelProvider = viewModelProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<BasicViewModel> viewModelProvider) {
    return new MainActivity_MembersInjector(viewModelProvider);}

  @Override
  public void injectMembers(MainActivity instance) {
    injectViewModel(instance, viewModelProvider.get());
  }

  @InjectedFieldSignature("com.solar.architecture.MainActivity.viewModel")
  public static void injectViewModel(MainActivity instance, BasicViewModel viewModel) {
    instance.viewModel = viewModel;
  }
}
