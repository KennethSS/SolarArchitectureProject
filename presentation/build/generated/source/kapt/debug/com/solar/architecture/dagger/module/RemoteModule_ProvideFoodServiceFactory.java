// Generated by Dagger (https://dagger.dev).
package com.solar.architecture.dagger.module;

import com.solar.remote.service.FoodService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteModule_ProvideFoodServiceFactory implements Factory<FoodService> {
  private final RemoteModule module;

  public RemoteModule_ProvideFoodServiceFactory(RemoteModule module) {
    this.module = module;
  }

  @Override
  public FoodService get() {
    return provideFoodService(module);
  }

  public static RemoteModule_ProvideFoodServiceFactory create(RemoteModule module) {
    return new RemoteModule_ProvideFoodServiceFactory(module);
  }

  public static FoodService provideFoodService(RemoteModule instance) {
    return Preconditions.checkNotNull(instance.provideFoodService(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
